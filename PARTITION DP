QUE LINK :- https://leetcode.com/problems/partition-array-for-maximum-sum/description/

class Solution {
public:

const int mod = 1e9+7;

    int maxSumAfterPartitioning(vector<int>& arr, int k) {
        
        int n = arr.size();

        long long int dp[501] = {0};

        for(int i=1;i<=n;i++){

            int maxi=arr[i-1];

            for(int j=i-1;j>=i-min(k,i);j--){//j denotes size upto which dp[j] precomputed is used and j index to i string is considered

                maxi = max(maxi, arr[j]);

                dp[i] = max(dp[i]%mod%mod, maxi*(i-j)%mod%mod  + dp[j]%mod%mod)%mod%mod;

            }
        }

        return dp[n]%mod%mod;

    }
};
